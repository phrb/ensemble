#N canvas 0 48 1920 1032 10;
#X obj 594 347 dac~;
#X msg 134 390 1;
#X obj 186 418 switch~;
#X msg 239 389 0;
#X obj 125 367 r \$0processing_on;
#X obj 239 366 r \$0processing_off;
#X text 74 329 These symbols let Ensemble control the execution flow
of individual patches \, by turning their DSP cycles on/off.;
#X text 317 34 Using patches as Ensemble Reasonings;
#X obj 589 153 loadbang;
#X text 80 85 These symbols allow Ensemble to turn on/off this patch's
sound output. If they receive a bang \, Ensemble stops/starts sending
samples from this patch to audio card \, but still computes DSP cycles.
Ensemble does not process audio toggling messages between sample-obtaining
cycles. This means the temporal control of audio output should be done
via signal handling. If the MUTE symbol receives a bang \, it mutes
the patch completely \, and audio output can't be turned on again for
this patch.;
#X text 462 84 This pair of symbols is used to set the patch processing
duration \, measured in Pd processing ticks \, or real seconds. If
not present \, Ensemble gives one second worth of samples to each patch
\, as default.;
#X text 458 256 Samples are sent to Ensemble via [ dac~ ]. The patch
can receive samples from the framework via [ adc~ ]. This is a simple
audio output.;
#X obj 108 291 s audio_on;
#X obj 195 292 s audio_off;
#X obj 288 292 s audio_toggle;
#X obj 527 207 s set_ticks;
#X obj 642 208 s set_seconds;
#X obj 529 186 f 690;
#X obj 203 215 loadbang;
#X obj 185 243 s MUTE;
#X obj 602 317 osc~ 200;
#X obj 641 187 f 1;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X connect 8 0 21 0;
#X connect 17 0 15 0;
#X connect 20 0 0 0;
#X connect 20 0 0 1;
#X connect 21 0 16 0;
