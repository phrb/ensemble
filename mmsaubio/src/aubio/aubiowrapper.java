/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package aubio;

public class aubiowrapper {
  public static SWIGTYPE_p_fvec_t new_fvec(long length, long channels) {
    long cPtr = aubiowrapperJNI.new_fvec(length, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_fvec_t(cPtr, false);
  }

  public static void del_fvec(SWIGTYPE_p_fvec_t s) {
    aubiowrapperJNI.del_fvec(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static float fvec_read_sample(SWIGTYPE_p_fvec_t s, long channel, long position) {
    return aubiowrapperJNI.fvec_read_sample(SWIGTYPE_p_fvec_t.getCPtr(s), channel, position);
  }

  public static void fvec_write_sample(SWIGTYPE_p_fvec_t s, float data, long channel, long position) {
    aubiowrapperJNI.fvec_write_sample(SWIGTYPE_p_fvec_t.getCPtr(s), data, channel, position);
  }

  public static SWIGTYPE_p_float fvec_get_channel(SWIGTYPE_p_fvec_t s, long channel) {
    long cPtr = aubiowrapperJNI.fvec_get_channel(SWIGTYPE_p_fvec_t.getCPtr(s), channel);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void fvec_put_channel(SWIGTYPE_p_fvec_t s, SWIGTYPE_p_float data, long channel) {
    aubiowrapperJNI.fvec_put_channel(SWIGTYPE_p_fvec_t.getCPtr(s), SWIGTYPE_p_float.getCPtr(data), channel);
  }

  public static SWIGTYPE_p_p_float fvec_get_data(SWIGTYPE_p_fvec_t s) {
    long cPtr = aubiowrapperJNI.fvec_get_data(SWIGTYPE_p_fvec_t.getCPtr(s));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_cvec_t new_cvec(long length, long channels) {
    long cPtr = aubiowrapperJNI.new_cvec(length, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_cvec_t(cPtr, false);
  }

  public static void del_cvec(SWIGTYPE_p_cvec_t s) {
    aubiowrapperJNI.del_cvec(SWIGTYPE_p_cvec_t.getCPtr(s));
  }

  public static void cvec_write_norm(SWIGTYPE_p_cvec_t s, float data, long channel, long position) {
    aubiowrapperJNI.cvec_write_norm(SWIGTYPE_p_cvec_t.getCPtr(s), data, channel, position);
  }

  public static void cvec_write_phas(SWIGTYPE_p_cvec_t s, float data, long channel, long position) {
    aubiowrapperJNI.cvec_write_phas(SWIGTYPE_p_cvec_t.getCPtr(s), data, channel, position);
  }

  public static float cvec_read_norm(SWIGTYPE_p_cvec_t s, long channel, long position) {
    return aubiowrapperJNI.cvec_read_norm(SWIGTYPE_p_cvec_t.getCPtr(s), channel, position);
  }

  public static float cvec_read_phas(SWIGTYPE_p_cvec_t s, long channel, long position) {
    return aubiowrapperJNI.cvec_read_phas(SWIGTYPE_p_cvec_t.getCPtr(s), channel, position);
  }

  public static void cvec_put_norm_channel(SWIGTYPE_p_cvec_t s, SWIGTYPE_p_float data, long channel) {
    aubiowrapperJNI.cvec_put_norm_channel(SWIGTYPE_p_cvec_t.getCPtr(s), SWIGTYPE_p_float.getCPtr(data), channel);
  }

  public static void cvec_put_phas_channel(SWIGTYPE_p_cvec_t s, SWIGTYPE_p_float data, long channel) {
    aubiowrapperJNI.cvec_put_phas_channel(SWIGTYPE_p_cvec_t.getCPtr(s), SWIGTYPE_p_float.getCPtr(data), channel);
  }

  public static SWIGTYPE_p_float cvec_get_norm_channel(SWIGTYPE_p_cvec_t s, long channel) {
    long cPtr = aubiowrapperJNI.cvec_get_norm_channel(SWIGTYPE_p_cvec_t.getCPtr(s), channel);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_float cvec_get_phas_channel(SWIGTYPE_p_cvec_t s, long channel) {
    long cPtr = aubiowrapperJNI.cvec_get_phas_channel(SWIGTYPE_p_cvec_t.getCPtr(s), channel);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_p_float cvec_get_norm(SWIGTYPE_p_cvec_t s) {
    long cPtr = aubiowrapperJNI.cvec_get_norm(SWIGTYPE_p_cvec_t.getCPtr(s));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_p_float cvec_get_phas(SWIGTYPE_p_cvec_t s) {
    long cPtr = aubiowrapperJNI.cvec_get_phas(SWIGTYPE_p_cvec_t.getCPtr(s));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_sndfile_t new_aubio_sndfile_ro(String inputfile) {
    long cPtr = aubiowrapperJNI.new_aubio_sndfile_ro(inputfile);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_sndfile_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_sndfile_t new_aubio_sndfile_wo(SWIGTYPE_p_aubio_sndfile_t existingfile, String outputname) {
    long cPtr = aubiowrapperJNI.new_aubio_sndfile_wo(SWIGTYPE_p_aubio_sndfile_t.getCPtr(existingfile), outputname);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_sndfile_t(cPtr, false);
  }

  public static void aubio_sndfile_info(SWIGTYPE_p_aubio_sndfile_t file) {
    aubiowrapperJNI.aubio_sndfile_info(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file));
  }

  public static int aubio_sndfile_write(SWIGTYPE_p_aubio_sndfile_t file, int frames, SWIGTYPE_p_fvec_t write) {
    return aubiowrapperJNI.aubio_sndfile_write(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file), frames, SWIGTYPE_p_fvec_t.getCPtr(write));
  }

  public static int aubio_sndfile_read(SWIGTYPE_p_aubio_sndfile_t file, int frames, SWIGTYPE_p_fvec_t read) {
    return aubiowrapperJNI.aubio_sndfile_read(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file), frames, SWIGTYPE_p_fvec_t.getCPtr(read));
  }

  public static int del_aubio_sndfile(SWIGTYPE_p_aubio_sndfile_t file) {
    return aubiowrapperJNI.del_aubio_sndfile(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file));
  }

  public static long aubio_sndfile_channels(SWIGTYPE_p_aubio_sndfile_t file) {
    return aubiowrapperJNI.aubio_sndfile_channels(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file));
  }

  public static long aubio_sndfile_samplerate(SWIGTYPE_p_aubio_sndfile_t file) {
    return aubiowrapperJNI.aubio_sndfile_samplerate(SWIGTYPE_p_aubio_sndfile_t.getCPtr(file));
  }

  public static void aubio_fft_getnorm(SWIGTYPE_p_float norm, SWIGTYPE_p_fft_data_t spectrum, long size) {
    aubiowrapperJNI.aubio_fft_getnorm(SWIGTYPE_p_float.getCPtr(norm), SWIGTYPE_p_fft_data_t.getCPtr(spectrum), size);
  }

  public static void aubio_fft_getphas(SWIGTYPE_p_float phase, SWIGTYPE_p_fft_data_t spectrum, long size) {
    aubiowrapperJNI.aubio_fft_getphas(SWIGTYPE_p_float.getCPtr(phase), SWIGTYPE_p_fft_data_t.getCPtr(spectrum), size);
  }

  public static SWIGTYPE_p_aubio_mfft_t new_aubio_mfft(long winsize, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_mfft(winsize, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_mfft_t(cPtr, false);
  }

  public static void aubio_mfft_do(SWIGTYPE_p_aubio_mfft_t fft, SWIGTYPE_p_fvec_t in, SWIGTYPE_p_cvec_t fftgrain) {
    aubiowrapperJNI.aubio_mfft_do(SWIGTYPE_p_aubio_mfft_t.getCPtr(fft), SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_cvec_t.getCPtr(fftgrain));
  }

  public static void aubio_mfft_rdo(SWIGTYPE_p_aubio_mfft_t fft, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t out) {
    aubiowrapperJNI.aubio_mfft_rdo(SWIGTYPE_p_aubio_mfft_t.getCPtr(fft), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(out));
  }

  public static void del_aubio_mfft(SWIGTYPE_p_aubio_mfft_t fft) {
    aubiowrapperJNI.del_aubio_mfft(SWIGTYPE_p_aubio_mfft_t.getCPtr(fft));
  }

  public static SWIGTYPE_p_aubio_filter_t new_aubio_filter(long samplerate, long order) {
    long cPtr = aubiowrapperJNI.new_aubio_filter(samplerate, order);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_filter_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_filter_t new_aubio_adsgn_filter(long samplerate) {
    long cPtr = aubiowrapperJNI.new_aubio_adsgn_filter(samplerate);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_filter_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_filter_t new_aubio_cdsgn_filter(long samplerate) {
    long cPtr = aubiowrapperJNI.new_aubio_cdsgn_filter(samplerate);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_filter_t(cPtr, false);
  }

  public static void aubio_filter_do(SWIGTYPE_p_aubio_filter_t b, SWIGTYPE_p_fvec_t in) {
    aubiowrapperJNI.aubio_filter_do(SWIGTYPE_p_aubio_filter_t.getCPtr(b), SWIGTYPE_p_fvec_t.getCPtr(in));
  }

  public static void aubio_filter_do_outplace(SWIGTYPE_p_aubio_filter_t b, SWIGTYPE_p_fvec_t in, SWIGTYPE_p_fvec_t out) {
    aubiowrapperJNI.aubio_filter_do_outplace(SWIGTYPE_p_aubio_filter_t.getCPtr(b), SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_fvec_t.getCPtr(out));
  }

  public static void aubio_filter_do_filtfilt(SWIGTYPE_p_aubio_filter_t b, SWIGTYPE_p_fvec_t in, SWIGTYPE_p_fvec_t tmp) {
    aubiowrapperJNI.aubio_filter_do_filtfilt(SWIGTYPE_p_aubio_filter_t.getCPtr(b), SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_fvec_t.getCPtr(tmp));
  }

  public static SWIGTYPE_p_aubio_biquad_t new_aubio_biquad(double b1, double b2, double b3, double a2, double a3) {
    long cPtr = aubiowrapperJNI.new_aubio_biquad(b1, b2, b3, a2, a3);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_biquad_t(cPtr, false);
  }

  public static void aubio_biquad_do(SWIGTYPE_p_aubio_biquad_t b, SWIGTYPE_p_fvec_t in) {
    aubiowrapperJNI.aubio_biquad_do(SWIGTYPE_p_aubio_biquad_t.getCPtr(b), SWIGTYPE_p_fvec_t.getCPtr(in));
  }

  public static void aubio_biquad_do_filtfilt(SWIGTYPE_p_aubio_biquad_t b, SWIGTYPE_p_fvec_t in, SWIGTYPE_p_fvec_t tmp) {
    aubiowrapperJNI.aubio_biquad_do_filtfilt(SWIGTYPE_p_aubio_biquad_t.getCPtr(b), SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_fvec_t.getCPtr(tmp));
  }

  public static SWIGTYPE_p_aubio_hist_t new_aubio_hist(float flow, float fhig, long nelems, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_hist(flow, fhig, nelems, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_hist_t(cPtr, false);
  }

  public static void del_aubio_hist(SWIGTYPE_p_aubio_hist_t s) {
    aubiowrapperJNI.del_aubio_hist(SWIGTYPE_p_aubio_hist_t.getCPtr(s));
  }

  public static void aubio_hist_do(SWIGTYPE_p_aubio_hist_t s, SWIGTYPE_p_fvec_t input) {
    aubiowrapperJNI.aubio_hist_do(SWIGTYPE_p_aubio_hist_t.getCPtr(s), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void aubio_hist_do_notnull(SWIGTYPE_p_aubio_hist_t s, SWIGTYPE_p_fvec_t input) {
    aubiowrapperJNI.aubio_hist_do_notnull(SWIGTYPE_p_aubio_hist_t.getCPtr(s), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void aubio_hist_dyn_notnull(SWIGTYPE_p_aubio_hist_t s, SWIGTYPE_p_fvec_t input) {
    aubiowrapperJNI.aubio_hist_dyn_notnull(SWIGTYPE_p_aubio_hist_t.getCPtr(s), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void aubio_window(SWIGTYPE_p_float w, long size, aubio_window_type wintype) {
    aubiowrapperJNI.aubio_window(SWIGTYPE_p_float.getCPtr(w), size, wintype.swigValue());
  }

  public static float aubio_unwrap2pi(float phase) {
    return aubiowrapperJNI.aubio_unwrap2pi(phase);
  }

  public static float vec_mean(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_mean(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static float vec_max(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_max(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static float vec_min(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_min(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static long vec_min_elem(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_min_elem(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static long vec_max_elem(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_max_elem(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static void vec_shift(SWIGTYPE_p_fvec_t s) {
    aubiowrapperJNI.vec_shift(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static float vec_sum(SWIGTYPE_p_fvec_t s) {
    return aubiowrapperJNI.vec_sum(SWIGTYPE_p_fvec_t.getCPtr(s));
  }

  public static float vec_local_energy(SWIGTYPE_p_fvec_t f) {
    return aubiowrapperJNI.vec_local_energy(SWIGTYPE_p_fvec_t.getCPtr(f));
  }

  public static float vec_local_hfc(SWIGTYPE_p_fvec_t f) {
    return aubiowrapperJNI.vec_local_hfc(SWIGTYPE_p_fvec_t.getCPtr(f));
  }

  public static float vec_alpha_norm(SWIGTYPE_p_fvec_t DF, float alpha) {
    return aubiowrapperJNI.vec_alpha_norm(SWIGTYPE_p_fvec_t.getCPtr(DF), alpha);
  }

  public static void vec_dc_removal(SWIGTYPE_p_fvec_t mag) {
    aubiowrapperJNI.vec_dc_removal(SWIGTYPE_p_fvec_t.getCPtr(mag));
  }

  public static void vec_alpha_normalise(SWIGTYPE_p_fvec_t mag, long alpha) {
    aubiowrapperJNI.vec_alpha_normalise(SWIGTYPE_p_fvec_t.getCPtr(mag), alpha);
  }

  public static void vec_add(SWIGTYPE_p_fvec_t mag, float threshold) {
    aubiowrapperJNI.vec_add(SWIGTYPE_p_fvec_t.getCPtr(mag), threshold);
  }

  public static void vec_adapt_thres(SWIGTYPE_p_fvec_t vec, SWIGTYPE_p_fvec_t tmp, long post, long pre) {
    aubiowrapperJNI.vec_adapt_thres(SWIGTYPE_p_fvec_t.getCPtr(vec), SWIGTYPE_p_fvec_t.getCPtr(tmp), post, pre);
  }

  public static float vec_moving_thres(SWIGTYPE_p_fvec_t vec, SWIGTYPE_p_fvec_t tmp, long post, long pre, long pos) {
    return aubiowrapperJNI.vec_moving_thres(SWIGTYPE_p_fvec_t.getCPtr(vec), SWIGTYPE_p_fvec_t.getCPtr(tmp), post, pre, pos);
  }

  public static float vec_median(SWIGTYPE_p_fvec_t input) {
    return aubiowrapperJNI.vec_median(SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static float vec_quadint(SWIGTYPE_p_fvec_t x, long pos) {
    return aubiowrapperJNI.vec_quadint(SWIGTYPE_p_fvec_t.getCPtr(x), pos);
  }

  public static float aubio_quadfrac(float s0, float s1, float s2, float pf) {
    return aubiowrapperJNI.aubio_quadfrac(s0, s1, s2, pf);
  }

  public static long vec_peakpick(SWIGTYPE_p_fvec_t input, long pos) {
    return aubiowrapperJNI.vec_peakpick(SWIGTYPE_p_fvec_t.getCPtr(input), pos);
  }

  public static float aubio_bintomidi(float bin, float samplerate, float fftsize) {
    return aubiowrapperJNI.aubio_bintomidi(bin, samplerate, fftsize);
  }

  public static float aubio_miditobin(float midi, float samplerate, float fftsize) {
    return aubiowrapperJNI.aubio_miditobin(midi, samplerate, fftsize);
  }

  public static float aubio_bintofreq(float bin, float samplerate, float fftsize) {
    return aubiowrapperJNI.aubio_bintofreq(bin, samplerate, fftsize);
  }

  public static float aubio_freqtobin(float freq, float samplerate, float fftsize) {
    return aubiowrapperJNI.aubio_freqtobin(freq, samplerate, fftsize);
  }

  public static float aubio_freqtomidi(float freq) {
    return aubiowrapperJNI.aubio_freqtomidi(freq);
  }

  public static float aubio_miditofreq(float midi) {
    return aubiowrapperJNI.aubio_miditofreq(midi);
  }

  public static long aubio_silence_detection(SWIGTYPE_p_fvec_t ibuf, float threshold) {
    return aubiowrapperJNI.aubio_silence_detection(SWIGTYPE_p_fvec_t.getCPtr(ibuf), threshold);
  }

  public static float aubio_level_detection(SWIGTYPE_p_fvec_t ibuf, float threshold) {
    return aubiowrapperJNI.aubio_level_detection(SWIGTYPE_p_fvec_t.getCPtr(ibuf), threshold);
  }

  public static void aubio_autocorr(SWIGTYPE_p_fvec_t in, SWIGTYPE_p_fvec_t acf) {
    aubiowrapperJNI.aubio_autocorr(SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_fvec_t.getCPtr(acf));
  }

  public static SWIGTYPE_p_aubio_scale_t new_aubio_scale(float flow, float fhig, float ilow, float ihig) {
    long cPtr = aubiowrapperJNI.new_aubio_scale(flow, fhig, ilow, ihig);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_scale_t(cPtr, false);
  }

  public static void aubio_scale_set(SWIGTYPE_p_aubio_scale_t s, float ilow, float ihig, float olow, float ohig) {
    aubiowrapperJNI.aubio_scale_set(SWIGTYPE_p_aubio_scale_t.getCPtr(s), ilow, ihig, olow, ohig);
  }

  public static void aubio_scale_do(SWIGTYPE_p_aubio_scale_t s, SWIGTYPE_p_fvec_t input) {
    aubiowrapperJNI.aubio_scale_do(SWIGTYPE_p_aubio_scale_t.getCPtr(s), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void del_aubio_scale(SWIGTYPE_p_aubio_scale_t s) {
    aubiowrapperJNI.del_aubio_scale(SWIGTYPE_p_aubio_scale_t.getCPtr(s));
  }

  public static SWIGTYPE_p_aubio_resampler_t new_aubio_resampler(float ratio, long type) {
    long cPtr = aubiowrapperJNI.new_aubio_resampler(ratio, type);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_resampler_t(cPtr, false);
  }

  public static long aubio_resampler_process(SWIGTYPE_p_aubio_resampler_t s, SWIGTYPE_p_fvec_t input, SWIGTYPE_p_fvec_t output) {
    return aubiowrapperJNI.aubio_resampler_process(SWIGTYPE_p_aubio_resampler_t.getCPtr(s), SWIGTYPE_p_fvec_t.getCPtr(input), SWIGTYPE_p_fvec_t.getCPtr(output));
  }

  public static void del_aubio_resampler(SWIGTYPE_p_aubio_resampler_t s) {
    aubiowrapperJNI.del_aubio_resampler(SWIGTYPE_p_aubio_resampler_t.getCPtr(s));
  }

  public static SWIGTYPE_p_aubio_onsetdetection_t new_aubio_onsetdetection(aubio_onsetdetection_type type, long size, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_onsetdetection(type.swigValue(), size, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_onsetdetection_t(cPtr, false);
  }

  public static void aubio_onsetdetection(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_free(SWIGTYPE_p_aubio_onsetdetection_t o) {
    aubiowrapperJNI.aubio_onsetdetection_free(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o));
  }

  public static void aubio_onsetdetection_energy(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_energy(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_hfc(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_hfc(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_complex(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_complex(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_phase(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_phase(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_specdiff(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_specdiff(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_kl(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_kl(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static void aubio_onsetdetection_mkl(SWIGTYPE_p_aubio_onsetdetection_t o, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t onset) {
    aubiowrapperJNI.aubio_onsetdetection_mkl(SWIGTYPE_p_aubio_onsetdetection_t.getCPtr(o), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(onset));
  }

  public static SWIGTYPE_p_aubio_pvoc_t new_aubio_pvoc(long win_s, long hop_s, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_pvoc(win_s, hop_s, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pvoc_t(cPtr, false);
  }

  public static void del_aubio_pvoc(SWIGTYPE_p_aubio_pvoc_t pv) {
    aubiowrapperJNI.del_aubio_pvoc(SWIGTYPE_p_aubio_pvoc_t.getCPtr(pv));
  }

  public static void aubio_pvoc_do(SWIGTYPE_p_aubio_pvoc_t pv, SWIGTYPE_p_fvec_t in, SWIGTYPE_p_cvec_t fftgrain) {
    aubiowrapperJNI.aubio_pvoc_do(SWIGTYPE_p_aubio_pvoc_t.getCPtr(pv), SWIGTYPE_p_fvec_t.getCPtr(in), SWIGTYPE_p_cvec_t.getCPtr(fftgrain));
  }

  public static void aubio_pvoc_rdo(SWIGTYPE_p_aubio_pvoc_t pv, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_fvec_t out) {
    aubiowrapperJNI.aubio_pvoc_rdo(SWIGTYPE_p_aubio_pvoc_t.getCPtr(pv), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_fvec_t.getCPtr(out));
  }

  public static float aubio_pitchdetection(SWIGTYPE_p_aubio_pitchdetection_t p, SWIGTYPE_p_fvec_t ibuf) {
    return aubiowrapperJNI.aubio_pitchdetection(SWIGTYPE_p_aubio_pitchdetection_t.getCPtr(p), SWIGTYPE_p_fvec_t.getCPtr(ibuf));
  }

  public static void aubio_pitchdetection_set_yinthresh(SWIGTYPE_p_aubio_pitchdetection_t p, float thres) {
    aubiowrapperJNI.aubio_pitchdetection_set_yinthresh(SWIGTYPE_p_aubio_pitchdetection_t.getCPtr(p), thres);
  }

  public static void del_aubio_pitchdetection(SWIGTYPE_p_aubio_pitchdetection_t p) {
    aubiowrapperJNI.del_aubio_pitchdetection(SWIGTYPE_p_aubio_pitchdetection_t.getCPtr(p));
  }

  public static SWIGTYPE_p_aubio_pitchdetection_t new_aubio_pitchdetection(long bufsize, long hopsize, long channels, long samplerate, aubio_pitchdetection_type type, aubio_pitchdetection_mode mode) {
    long cPtr = aubiowrapperJNI.new_aubio_pitchdetection(bufsize, hopsize, channels, samplerate, type.swigValue(), mode.swigValue());
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pitchdetection_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_pitchmcomb_t new_aubio_pitchmcomb(long bufsize, long hopsize, long channels, long samplerate) {
    long cPtr = aubiowrapperJNI.new_aubio_pitchmcomb(bufsize, hopsize, channels, samplerate);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pitchmcomb_t(cPtr, false);
  }

  public static float aubio_pitchmcomb_detect(SWIGTYPE_p_aubio_pitchmcomb_t p, SWIGTYPE_p_cvec_t fftgrain) {
    return aubiowrapperJNI.aubio_pitchmcomb_detect(SWIGTYPE_p_aubio_pitchmcomb_t.getCPtr(p), SWIGTYPE_p_cvec_t.getCPtr(fftgrain));
  }

  public static long aubio_pitch_cands(SWIGTYPE_p_aubio_pitchmcomb_t p, SWIGTYPE_p_cvec_t fftgrain, SWIGTYPE_p_float cands) {
    return aubiowrapperJNI.aubio_pitch_cands(SWIGTYPE_p_aubio_pitchmcomb_t.getCPtr(p), SWIGTYPE_p_cvec_t.getCPtr(fftgrain), SWIGTYPE_p_float.getCPtr(cands));
  }

  public static void del_aubio_pitchmcomb(SWIGTYPE_p_aubio_pitchmcomb_t p) {
    aubiowrapperJNI.del_aubio_pitchmcomb(SWIGTYPE_p_aubio_pitchmcomb_t.getCPtr(p));
  }

  public static void aubio_pitchyin_diff(SWIGTYPE_p_fvec_t input, SWIGTYPE_p_fvec_t yin) {
    aubiowrapperJNI.aubio_pitchyin_diff(SWIGTYPE_p_fvec_t.getCPtr(input), SWIGTYPE_p_fvec_t.getCPtr(yin));
  }

  public static void aubio_pitchyin_getcum(SWIGTYPE_p_fvec_t yin) {
    aubiowrapperJNI.aubio_pitchyin_getcum(SWIGTYPE_p_fvec_t.getCPtr(yin));
  }

  public static long aubio_pitchyin_getpitch(SWIGTYPE_p_fvec_t yin) {
    return aubiowrapperJNI.aubio_pitchyin_getpitch(SWIGTYPE_p_fvec_t.getCPtr(yin));
  }

  public static float aubio_pitchyin_getpitchfast(SWIGTYPE_p_fvec_t input, SWIGTYPE_p_fvec_t yin, float tol) {
    return aubiowrapperJNI.aubio_pitchyin_getpitchfast(SWIGTYPE_p_fvec_t.getCPtr(input), SWIGTYPE_p_fvec_t.getCPtr(yin), tol);
  }

  public static SWIGTYPE_p_aubio_pitchschmitt_t new_aubio_pitchschmitt(long size, long samplerate) {
    long cPtr = aubiowrapperJNI.new_aubio_pitchschmitt(size, samplerate);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pitchschmitt_t(cPtr, false);
  }

  public static float aubio_pitchschmitt_detect(SWIGTYPE_p_aubio_pitchschmitt_t p, SWIGTYPE_p_fvec_t input) {
    return aubiowrapperJNI.aubio_pitchschmitt_detect(SWIGTYPE_p_aubio_pitchschmitt_t.getCPtr(p), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void del_aubio_pitchschmitt(SWIGTYPE_p_aubio_pitchschmitt_t p) {
    aubiowrapperJNI.del_aubio_pitchschmitt(SWIGTYPE_p_aubio_pitchschmitt_t.getCPtr(p));
  }

  public static SWIGTYPE_p_aubio_pitchfcomb_t new_aubio_pitchfcomb(long size, long hopsize, long samplerate) {
    long cPtr = aubiowrapperJNI.new_aubio_pitchfcomb(size, hopsize, samplerate);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pitchfcomb_t(cPtr, false);
  }

  public static float aubio_pitchfcomb_detect(SWIGTYPE_p_aubio_pitchfcomb_t p, SWIGTYPE_p_fvec_t input) {
    return aubiowrapperJNI.aubio_pitchfcomb_detect(SWIGTYPE_p_aubio_pitchfcomb_t.getCPtr(p), SWIGTYPE_p_fvec_t.getCPtr(input));
  }

  public static void del_aubio_pitchfcomb(SWIGTYPE_p_aubio_pitchfcomb_t p) {
    aubiowrapperJNI.del_aubio_pitchfcomb(SWIGTYPE_p_aubio_pitchfcomb_t.getCPtr(p));
  }

  public static SWIGTYPE_p_aubio_pickpeak_t new_aubio_peakpicker(float threshold) {
    long cPtr = aubiowrapperJNI.new_aubio_peakpicker(threshold);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_pickpeak_t(cPtr, false);
  }

  public static long aubio_peakpick_pimrt(SWIGTYPE_p_fvec_t DF, SWIGTYPE_p_aubio_pickpeak_t p) {
    return aubiowrapperJNI.aubio_peakpick_pimrt(SWIGTYPE_p_fvec_t.getCPtr(DF), SWIGTYPE_p_aubio_pickpeak_t.getCPtr(p));
  }

  public static float aubio_peakpick_pimrt_getval(SWIGTYPE_p_aubio_pickpeak_t p) {
    return aubiowrapperJNI.aubio_peakpick_pimrt_getval(SWIGTYPE_p_aubio_pickpeak_t.getCPtr(p));
  }

  public static long aubio_peakpick_pimrt_wt(SWIGTYPE_p_fvec_t DF, SWIGTYPE_p_aubio_pickpeak_t p, SWIGTYPE_p_float peakval) {
    return aubiowrapperJNI.aubio_peakpick_pimrt_wt(SWIGTYPE_p_fvec_t.getCPtr(DF), SWIGTYPE_p_aubio_pickpeak_t.getCPtr(p), SWIGTYPE_p_float.getCPtr(peakval));
  }

  public static void del_aubio_peakpicker(SWIGTYPE_p_aubio_pickpeak_t p) {
    aubiowrapperJNI.del_aubio_peakpicker(SWIGTYPE_p_aubio_pickpeak_t.getCPtr(p));
  }

  public static SWIGTYPE_p_aubio_tss_t new_aubio_tss(float thrs, float alfa, float beta, long size, long overlap, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_tss(thrs, alfa, beta, size, overlap, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_tss_t(cPtr, false);
  }

  public static void del_aubio_tss(SWIGTYPE_p_aubio_tss_t s) {
    aubiowrapperJNI.del_aubio_tss(SWIGTYPE_p_aubio_tss_t.getCPtr(s));
  }

  public static void aubio_tss_do(SWIGTYPE_p_aubio_tss_t s, SWIGTYPE_p_cvec_t input, SWIGTYPE_p_cvec_t trans, SWIGTYPE_p_cvec_t stead) {
    aubiowrapperJNI.aubio_tss_do(SWIGTYPE_p_aubio_tss_t.getCPtr(s), SWIGTYPE_p_cvec_t.getCPtr(input), SWIGTYPE_p_cvec_t.getCPtr(trans), SWIGTYPE_p_cvec_t.getCPtr(stead));
  }

  public static SWIGTYPE_p_aubio_beattracking_t new_aubio_beattracking(long winlen, long channels) {
    long cPtr = aubiowrapperJNI.new_aubio_beattracking(winlen, channels);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_beattracking_t(cPtr, false);
  }

  public static void aubio_beattracking_do(SWIGTYPE_p_aubio_beattracking_t bt, SWIGTYPE_p_fvec_t dfframes, SWIGTYPE_p_fvec_t out) {
    aubiowrapperJNI.aubio_beattracking_do(SWIGTYPE_p_aubio_beattracking_t.getCPtr(bt), SWIGTYPE_p_fvec_t.getCPtr(dfframes), SWIGTYPE_p_fvec_t.getCPtr(out));
  }

  public static void del_aubio_beattracking(SWIGTYPE_p_aubio_beattracking_t p) {
    aubiowrapperJNI.del_aubio_beattracking(SWIGTYPE_p_aubio_beattracking_t.getCPtr(p));
  }

  public static SWIGTYPE_p_aubio_midi_event_t new_aubio_midi_event() {
    long cPtr = aubiowrapperJNI.new_aubio_midi_event();
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_event_t(cPtr, false);
  }

  public static int del_aubio_midi_event(SWIGTYPE_p_aubio_midi_event_t event) {
    return aubiowrapperJNI.del_aubio_midi_event(SWIGTYPE_p_aubio_midi_event_t.getCPtr(event));
  }

  public static int aubio_midi_event_set_type(SWIGTYPE_p_aubio_midi_event_t evt, int type) {
    return aubiowrapperJNI.aubio_midi_event_set_type(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), type);
  }

  public static int aubio_midi_event_get_type(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_type(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_channel(SWIGTYPE_p_aubio_midi_event_t evt, int chan) {
    return aubiowrapperJNI.aubio_midi_event_set_channel(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), chan);
  }

  public static int aubio_midi_event_get_channel(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_channel(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_get_key(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_key(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_key(SWIGTYPE_p_aubio_midi_event_t evt, int key) {
    return aubiowrapperJNI.aubio_midi_event_set_key(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), key);
  }

  public static int aubio_midi_event_get_velocity(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_velocity(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_velocity(SWIGTYPE_p_aubio_midi_event_t evt, int vel) {
    return aubiowrapperJNI.aubio_midi_event_set_velocity(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), vel);
  }

  public static int aubio_midi_event_get_control(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_control(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_control(SWIGTYPE_p_aubio_midi_event_t evt, int ctrl) {
    return aubiowrapperJNI.aubio_midi_event_set_control(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), ctrl);
  }

  public static int aubio_midi_event_get_value(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_value(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_value(SWIGTYPE_p_aubio_midi_event_t evt, int val) {
    return aubiowrapperJNI.aubio_midi_event_set_value(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), val);
  }

  public static int aubio_midi_event_get_program(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_program(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_program(SWIGTYPE_p_aubio_midi_event_t evt, int val) {
    return aubiowrapperJNI.aubio_midi_event_set_program(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), val);
  }

  public static int aubio_midi_event_get_pitch(SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_midi_event_get_pitch(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static int aubio_midi_event_set_pitch(SWIGTYPE_p_aubio_midi_event_t evt, int val) {
    return aubiowrapperJNI.aubio_midi_event_set_pitch(SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt), val);
  }

  public static int aubio_midi_event_length(short status) {
    return aubiowrapperJNI.aubio_midi_event_length(status);
  }

  public static SWIGTYPE_p_aubio_track_t new_aubio_track(int num) {
    long cPtr = aubiowrapperJNI.new_aubio_track(num);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_track_t(cPtr, false);
  }

  public static int del_aubio_track(SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.del_aubio_track(SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_track_set_name(SWIGTYPE_p_aubio_track_t track, String name) {
    return aubiowrapperJNI.aubio_track_set_name(SWIGTYPE_p_aubio_track_t.getCPtr(track), name);
  }

  public static String aubio_track_get_name(SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.aubio_track_get_name(SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_track_add_event(SWIGTYPE_p_aubio_track_t track, SWIGTYPE_p_aubio_midi_event_t evt) {
    return aubiowrapperJNI.aubio_track_add_event(SWIGTYPE_p_aubio_track_t.getCPtr(track), SWIGTYPE_p_aubio_midi_event_t.getCPtr(evt));
  }

  public static SWIGTYPE_p_aubio_midi_event_t aubio_track_first_event(SWIGTYPE_p_aubio_track_t track) {
    long cPtr = aubiowrapperJNI.aubio_track_first_event(SWIGTYPE_p_aubio_track_t.getCPtr(track));
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_event_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_midi_event_t aubio_track_next_event(SWIGTYPE_p_aubio_track_t track) {
    long cPtr = aubiowrapperJNI.aubio_track_next_event(SWIGTYPE_p_aubio_track_t.getCPtr(track));
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_event_t(cPtr, false);
  }

  public static int aubio_track_get_duration(SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.aubio_track_get_duration(SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_track_reset(SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.aubio_track_reset(SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_track_count_events(SWIGTYPE_p_aubio_track_t track, SWIGTYPE_p_int on, SWIGTYPE_p_int off) {
    return aubiowrapperJNI.aubio_track_count_events(SWIGTYPE_p_aubio_track_t.getCPtr(track), SWIGTYPE_p_int.getCPtr(on), SWIGTYPE_p_int.getCPtr(off));
  }

  public static SWIGTYPE_p_aubio_midi_player_t new_aubio_midi_player() {
    long cPtr = aubiowrapperJNI.new_aubio_midi_player();
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_player_t(cPtr, false);
  }

  public static int del_aubio_midi_player(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.del_aubio_midi_player(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_player_reset(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_reset(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_player_add_track(SWIGTYPE_p_aubio_midi_player_t player, SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.aubio_midi_player_add_track(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_midi_player_count_tracks(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_count_tracks(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static SWIGTYPE_p_aubio_track_t aubio_midi_player_get_track(SWIGTYPE_p_aubio_midi_player_t player, int i) {
    long cPtr = aubiowrapperJNI.aubio_midi_player_get_track(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_track_t(cPtr, false);
  }

  public static int aubio_midi_player_add(SWIGTYPE_p_aubio_midi_player_t player, String midifile) {
    return aubiowrapperJNI.aubio_midi_player_add(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), midifile);
  }

  public static int aubio_midi_player_load(SWIGTYPE_p_aubio_midi_player_t player, String filename) {
    return aubiowrapperJNI.aubio_midi_player_load(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), filename);
  }

  public static int aubio_midi_player_callback(SWIGTYPE_p_void data, long msec) {
    return aubiowrapperJNI.aubio_midi_player_callback(SWIGTYPE_p_void.getCPtr(data), msec);
  }

  public static int aubio_midi_player_play(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_play(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_player_play_offline(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_play_offline(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_player_stop(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_stop(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_player_set_loop(SWIGTYPE_p_aubio_midi_player_t player, int loop) {
    return aubiowrapperJNI.aubio_midi_player_set_loop(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), loop);
  }

  public static int aubio_midi_player_set_midi_tempo(SWIGTYPE_p_aubio_midi_player_t player, int tempo) {
    return aubiowrapperJNI.aubio_midi_player_set_midi_tempo(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), tempo);
  }

  public static int aubio_midi_player_set_bpm(SWIGTYPE_p_aubio_midi_player_t player, int bpm) {
    return aubiowrapperJNI.aubio_midi_player_set_bpm(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), bpm);
  }

  public static int aubio_midi_player_join(SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_player_join(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_track_send_events(SWIGTYPE_p_aubio_track_t track, SWIGTYPE_p_aubio_midi_player_t player, long ticks) {
    return aubiowrapperJNI.aubio_track_send_events(SWIGTYPE_p_aubio_track_t.getCPtr(track), SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), ticks);
  }

  public static int aubio_midi_send_event(SWIGTYPE_p_aubio_midi_player_t player, SWIGTYPE_p_aubio_midi_event_t event) {
    return aubiowrapperJNI.aubio_midi_send_event(SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), SWIGTYPE_p_aubio_midi_event_t.getCPtr(event));
  }

  public static SWIGTYPE_p_aubio_midi_parser_t new_aubio_midi_parser() {
    long cPtr = aubiowrapperJNI.new_aubio_midi_parser();
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_parser_t(cPtr, false);
  }

  public static int del_aubio_midi_parser(SWIGTYPE_p_aubio_midi_parser_t parser) {
    return aubiowrapperJNI.del_aubio_midi_parser(SWIGTYPE_p_aubio_midi_parser_t.getCPtr(parser));
  }

  public static SWIGTYPE_p_aubio_midi_event_t aubio_midi_parser_parse(SWIGTYPE_p_aubio_midi_parser_t parser, short c) {
    long cPtr = aubiowrapperJNI.aubio_midi_parser_parse(SWIGTYPE_p_aubio_midi_parser_t.getCPtr(parser), c);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_event_t(cPtr, false);
  }

  public static SWIGTYPE_p_aubio_midi_file_t new_aubio_midi_file(String filename) {
    long cPtr = aubiowrapperJNI.new_aubio_midi_file(filename);
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_file_t(cPtr, false);
  }

  public static void del_aubio_midi_file(SWIGTYPE_p_aubio_midi_file_t mf) {
    aubiowrapperJNI.del_aubio_midi_file(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf));
  }

  public static int aubio_midi_file_read_mthd(SWIGTYPE_p_aubio_midi_file_t midifile) {
    return aubiowrapperJNI.aubio_midi_file_read_mthd(SWIGTYPE_p_aubio_midi_file_t.getCPtr(midifile));
  }

  public static int aubio_midi_file_load_tracks(SWIGTYPE_p_aubio_midi_file_t midifile, SWIGTYPE_p_aubio_midi_player_t player) {
    return aubiowrapperJNI.aubio_midi_file_load_tracks(SWIGTYPE_p_aubio_midi_file_t.getCPtr(midifile), SWIGTYPE_p_aubio_midi_player_t.getCPtr(player));
  }

  public static int aubio_midi_file_read_track(SWIGTYPE_p_aubio_midi_file_t mf, SWIGTYPE_p_aubio_midi_player_t player, int num) {
    return aubiowrapperJNI.aubio_midi_file_read_track(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf), SWIGTYPE_p_aubio_midi_player_t.getCPtr(player), num);
  }

  public static int aubio_midi_file_read_event(SWIGTYPE_p_aubio_midi_file_t mf, SWIGTYPE_p_aubio_track_t track) {
    return aubiowrapperJNI.aubio_midi_file_read_event(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf), SWIGTYPE_p_aubio_track_t.getCPtr(track));
  }

  public static int aubio_midi_file_read_varlen(SWIGTYPE_p_aubio_midi_file_t mf) {
    return aubiowrapperJNI.aubio_midi_file_read_varlen(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf));
  }

  public static int aubio_midi_file_getc(SWIGTYPE_p_aubio_midi_file_t mf) {
    return aubiowrapperJNI.aubio_midi_file_getc(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf));
  }

  public static int aubio_midi_file_push(SWIGTYPE_p_aubio_midi_file_t mf, int c) {
    return aubiowrapperJNI.aubio_midi_file_push(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf), c);
  }

  public static int aubio_midi_file_read(SWIGTYPE_p_aubio_midi_file_t mf, SWIGTYPE_p_void buf, int len) {
    return aubiowrapperJNI.aubio_midi_file_read(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf), SWIGTYPE_p_void.getCPtr(buf), len);
  }

  public static int aubio_midi_file_skip(SWIGTYPE_p_aubio_midi_file_t mf, int len) {
    return aubiowrapperJNI.aubio_midi_file_skip(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf), len);
  }

  public static int aubio_midi_file_read_tracklen(SWIGTYPE_p_aubio_midi_file_t mf) {
    return aubiowrapperJNI.aubio_midi_file_read_tracklen(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf));
  }

  public static int aubio_midi_file_eot(SWIGTYPE_p_aubio_midi_file_t mf) {
    return aubiowrapperJNI.aubio_midi_file_eot(SWIGTYPE_p_aubio_midi_file_t.getCPtr(mf));
  }

  public static int aubio_midi_file_get_division(SWIGTYPE_p_aubio_midi_file_t midifile) {
    return aubiowrapperJNI.aubio_midi_file_get_division(SWIGTYPE_p_aubio_midi_file_t.getCPtr(midifile));
  }

  public static SWIGTYPE_p_aubio_midi_driver_t new_aubio_midi_driver(String name, SWIGTYPE_f_p_void_p_aubio_midi_event_t__p_int handler, SWIGTYPE_p_void event_handler_data) {
    long cPtr = aubiowrapperJNI.new_aubio_midi_driver(name, SWIGTYPE_f_p_void_p_aubio_midi_event_t__p_int.getCPtr(handler), SWIGTYPE_p_void.getCPtr(event_handler_data));
    return (cPtr == 0) ? null : new SWIGTYPE_p_aubio_midi_driver_t(cPtr, false);
  }

  public static void del_aubio_midi_driver(SWIGTYPE_p_aubio_midi_driver_t driver) {
    aubiowrapperJNI.del_aubio_midi_driver(SWIGTYPE_p_aubio_midi_driver_t.getCPtr(driver));
  }

  public static void aubio_midi_driver_settings(SWIGTYPE_p_aubio_settings_t settings) {
    aubiowrapperJNI.aubio_midi_driver_settings(SWIGTYPE_p_aubio_settings_t.getCPtr(settings));
  }

}
