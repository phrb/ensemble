/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package aubio;

public final class midi_meta_event {
  public final static midi_meta_event MIDI_COPYRIGHT = new midi_meta_event("MIDI_COPYRIGHT", aubiowrapperJNI.MIDI_COPYRIGHT_get());
  public final static midi_meta_event MIDI_TRACK_NAME = new midi_meta_event("MIDI_TRACK_NAME", aubiowrapperJNI.MIDI_TRACK_NAME_get());
  public final static midi_meta_event MIDI_INST_NAME = new midi_meta_event("MIDI_INST_NAME", aubiowrapperJNI.MIDI_INST_NAME_get());
  public final static midi_meta_event MIDI_LYRIC = new midi_meta_event("MIDI_LYRIC", aubiowrapperJNI.MIDI_LYRIC_get());
  public final static midi_meta_event MIDI_MARKER = new midi_meta_event("MIDI_MARKER", aubiowrapperJNI.MIDI_MARKER_get());
  public final static midi_meta_event MIDI_CUE_POINT = new midi_meta_event("MIDI_CUE_POINT", aubiowrapperJNI.MIDI_CUE_POINT_get());
  public final static midi_meta_event MIDI_EOT = new midi_meta_event("MIDI_EOT", aubiowrapperJNI.MIDI_EOT_get());
  public final static midi_meta_event MIDI_SET_TEMPO = new midi_meta_event("MIDI_SET_TEMPO", aubiowrapperJNI.MIDI_SET_TEMPO_get());
  public final static midi_meta_event MIDI_SMPTE_OFFSET = new midi_meta_event("MIDI_SMPTE_OFFSET", aubiowrapperJNI.MIDI_SMPTE_OFFSET_get());
  public final static midi_meta_event MIDI_TIME_SIGNATURE = new midi_meta_event("MIDI_TIME_SIGNATURE", aubiowrapperJNI.MIDI_TIME_SIGNATURE_get());
  public final static midi_meta_event MIDI_KEY_SIGNATURE = new midi_meta_event("MIDI_KEY_SIGNATURE", aubiowrapperJNI.MIDI_KEY_SIGNATURE_get());
  public final static midi_meta_event MIDI_SEQUENCER_EVENT = new midi_meta_event("MIDI_SEQUENCER_EVENT", aubiowrapperJNI.MIDI_SEQUENCER_EVENT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static midi_meta_event swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + midi_meta_event.class + " with value " + swigValue);
  }

  private midi_meta_event(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private midi_meta_event(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private midi_meta_event(String swigName, midi_meta_event swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static midi_meta_event[] swigValues = { MIDI_COPYRIGHT, MIDI_TRACK_NAME, MIDI_INST_NAME, MIDI_LYRIC, MIDI_MARKER, MIDI_CUE_POINT, MIDI_EOT, MIDI_SET_TEMPO, MIDI_SMPTE_OFFSET, MIDI_TIME_SIGNATURE, MIDI_KEY_SIGNATURE, MIDI_SEQUENCER_EVENT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

